// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: ora21062.proto

package ORA21062

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// .FONT_RT
type Test_Ora21062_FontRt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bold         bool    `protobuf:"varint,1,opt,name=bold,proto3" json:"bold,omitempty"`
	Italic       bool    `protobuf:"varint,2,opt,name=italic,proto3" json:"italic,omitempty"`
	Underline    string  `protobuf:"bytes,3,opt,name=underline,proto3" json:"underline,omitempty"`
	Family       string  `protobuf:"bytes,4,opt,name=family,proto3" json:"family,omitempty"`
	Size_        float64 `protobuf:"fixed64,5,opt,name=size_,json=size,proto3" json:"size_,omitempty"`
	Strike       bool    `protobuf:"varint,6,opt,name=strike,proto3" json:"strike,omitempty"`
	Color        string  `protobuf:"bytes,7,opt,name=color,proto3" json:"color,omitempty"`
	Colorindexed int32   `protobuf:"varint,8,opt,name=colorindexed,proto3" json:"colorindexed,omitempty"`
	Colortheme   int32   `protobuf:"varint,9,opt,name=colortheme,proto3" json:"colortheme,omitempty"`
	Colortint    float64 `protobuf:"fixed64,10,opt,name=colortint,proto3" json:"colortint,omitempty"`
	Vertalign    string  `protobuf:"bytes,11,opt,name=vertalign,proto3" json:"vertalign,omitempty"`
}

func (x *Test_Ora21062_FontRt) Reset() {
	*x = Test_Ora21062_FontRt{}
	mi := &file_ora21062_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Test_Ora21062_FontRt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test_Ora21062_FontRt) ProtoMessage() {}

func (x *Test_Ora21062_FontRt) ProtoReflect() protoreflect.Message {
	mi := &file_ora21062_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test_Ora21062_FontRt.ProtoReflect.Descriptor instead.
func (*Test_Ora21062_FontRt) Descriptor() ([]byte, []int) {
	return file_ora21062_proto_rawDescGZIP(), []int{0}
}

func (x *Test_Ora21062_FontRt) GetBold() bool {
	if x != nil {
		return x.Bold
	}
	return false
}

func (x *Test_Ora21062_FontRt) GetItalic() bool {
	if x != nil {
		return x.Italic
	}
	return false
}

func (x *Test_Ora21062_FontRt) GetUnderline() string {
	if x != nil {
		return x.Underline
	}
	return ""
}

func (x *Test_Ora21062_FontRt) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *Test_Ora21062_FontRt) GetSize_() float64 {
	if x != nil {
		return x.Size_
	}
	return 0
}

func (x *Test_Ora21062_FontRt) GetStrike() bool {
	if x != nil {
		return x.Strike
	}
	return false
}

func (x *Test_Ora21062_FontRt) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Test_Ora21062_FontRt) GetColorindexed() int32 {
	if x != nil {
		return x.Colorindexed
	}
	return 0
}

func (x *Test_Ora21062_FontRt) GetColortheme() int32 {
	if x != nil {
		return x.Colortheme
	}
	return 0
}

func (x *Test_Ora21062_FontRt) GetColortint() float64 {
	if x != nil {
		return x.Colortint
	}
	return 0
}

func (x *Test_Ora21062_FontRt) GetVertalign() string {
	if x != nil {
		return x.Vertalign
	}
	return ""
}

// .RICH_TEXT_RT
type Test_Ora21062_RichTextRt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Font *Test_Ora21062_FontRt `protobuf:"bytes,1,opt,name=font,proto3" json:"font,omitempty"`
	Text string                     `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Test_Ora21062_RichTextRt) Reset() {
	*x = Test_Ora21062_RichTextRt{}
	mi := &file_ora21062_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Test_Ora21062_RichTextRt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test_Ora21062_RichTextRt) ProtoMessage() {}

func (x *Test_Ora21062_RichTextRt) ProtoReflect() protoreflect.Message {
	mi := &file_ora21062_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test_Ora21062_RichTextRt.ProtoReflect.Descriptor instead.
func (*Test_Ora21062_RichTextRt) Descriptor() ([]byte, []int) {
	return file_ora21062_proto_rawDescGZIP(), []int{1}
}

func (x *Test_Ora21062_RichTextRt) GetFont() *Test_Ora21062_FontRt {
	if x != nil {
		return x.Font
	}
	return nil
}

func (x *Test_Ora21062_RichTextRt) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var file_ora21062_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         79396128,
		Name:          "objects.oracall_object_type",
		Tag:           "bytes,79396128,opt,name=oracall_object_type",
		Filename:      "ora21062.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         79396128,
		Name:          "objects.oracall_field_type",
		Tag:           "bytes,79396128,opt,name=oracall_field_type",
		Filename:      "ora21062.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional string oracall_object_type = 79396128;
	E_OracallObjectType = &file_ora21062_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional string oracall_field_type = 79396128;
	E_OracallFieldType = &file_ora21062_proto_extTypes[1]
)

var File_ora21062_proto protoreflect.FileDescriptor

var file_ora21062_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6f, 0x72, 0x61, 0x32, 0x31, 0x30, 0x36, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x04, 0x0a,
	0x19, 0x42, 0x72, 0x75, 0x6e, 0x6f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x42, 0x7a, 0x73, 0x58,
	0x6c, 0x73, 0x78, 0x5f, 0x46, 0x6f, 0x6e, 0x74, 0x52, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x6f,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x14, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x0e,
	0x50, 0x4c, 0x2f, 0x53, 0x51, 0x4c, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x52, 0x04,
	0x62, 0x6f, 0x6c, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x14, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x0e, 0x50, 0x4c, 0x2f, 0x53,
	0x51, 0x4c, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x52, 0x06, 0x69, 0x74, 0x61, 0x6c,
	0x69, 0x63, 0x12, 0x30, 0x0a, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x0c, 0x56, 0x41, 0x52,
	0x43, 0x48, 0x41, 0x52, 0x32, 0x28, 0x33, 0x30, 0x29, 0x52, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x0c, 0x56, 0x41, 0x52, 0x43,
	0x48, 0x41, 0x52, 0x32, 0x28, 0x33, 0x30, 0x29, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x12, 0x28, 0x0a, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x42,
	0x13, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x0d, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x5f, 0x44, 0x4f,
	0x55, 0x42, 0x4c, 0x45, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x14, 0x82, 0xd2, 0xef, 0xae,
	0x02, 0x0e, 0x50, 0x4c, 0x2f, 0x53, 0x51, 0x4c, 0x20, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x0c, 0x56,
	0x41, 0x52, 0x43, 0x48, 0x41, 0x52, 0x32, 0x28, 0x33, 0x30, 0x29, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x18, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x12,
	0x50, 0x4c, 0x2f, 0x53, 0x51, 0x4c, 0x20, 0x50, 0x4c, 0x53, 0x20, 0x49, 0x4e, 0x54, 0x45, 0x47,
	0x45, 0x52, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64,
	0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x18, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x12, 0x50, 0x4c, 0x2f, 0x53,
	0x51, 0x4c, 0x20, 0x50, 0x4c, 0x53, 0x20, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x42, 0x13, 0x82,
	0xd2, 0xef, 0xae, 0x02, 0x0d, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x5f, 0x44, 0x4f, 0x55, 0x42,
	0x4c, 0x45, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x09, 0x76, 0x65, 0x72, 0x74, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x12, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x0c, 0x56, 0x41, 0x52, 0x43, 0x48, 0x41, 0x52, 0x32,
	0x28, 0x33, 0x30, 0x29, 0x52, 0x09, 0x76, 0x65, 0x72, 0x74, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x3a,
	0x22, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x1c, 0x42, 0x52, 0x55, 0x4e, 0x4f, 0x5f, 0x4f, 0x57, 0x4e,
	0x45, 0x52, 0x2e, 0x42, 0x5a, 0x53, 0x5f, 0x58, 0x4c, 0x53, 0x58, 0x2e, 0x46, 0x4f, 0x4e, 0x54,
	0x5f, 0x52, 0x54, 0x22, 0xce, 0x01, 0x0a, 0x1d, 0x42, 0x72, 0x75, 0x6e, 0x6f, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x42, 0x7a, 0x73, 0x58, 0x6c, 0x73, 0x78, 0x5f, 0x52, 0x69, 0x63, 0x68, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x74, 0x12, 0x5a, 0x0a, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x42, 0x72,
	0x75, 0x6e, 0x6f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x42, 0x7a, 0x73, 0x58, 0x6c, 0x73, 0x78,
	0x5f, 0x46, 0x6f, 0x6e, 0x74, 0x52, 0x74, 0x42, 0x22, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x1c, 0x42,
	0x52, 0x55, 0x4e, 0x4f, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x2e, 0x42, 0x5a, 0x53, 0x5f, 0x58,
	0x4c, 0x53, 0x58, 0x2e, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x52, 0x54, 0x52, 0x04, 0x66, 0x6f, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0x82, 0xd2, 0xef, 0xae, 0x02, 0x0e, 0x56, 0x41, 0x52, 0x43, 0x48, 0x41, 0x52, 0x32, 0x28,
	0x31, 0x30, 0x30, 0x30, 0x29, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x3a, 0x27, 0x82, 0xd2, 0xef,
	0xae, 0x02, 0x21, 0x42, 0x52, 0x55, 0x4e, 0x4f, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x2e, 0x42,
	0x5a, 0x53, 0x5f, 0x58, 0x4c, 0x53, 0x58, 0x2e, 0x52, 0x49, 0x43, 0x48, 0x5f, 0x54, 0x45, 0x58,
	0x54, 0x5f, 0x52, 0x54, 0x3a, 0x52, 0x0a, 0x13, 0x6f, 0x72, 0x61, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa0, 0xfa, 0xed,
	0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x72, 0x61, 0x63, 0x61, 0x6c, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x4e, 0x0a, 0x12, 0x6f, 0x72, 0x61, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa0, 0xfa,
	0xed, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x61, 0x63, 0x61, 0x6c, 0x6c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x67, 0x75, 0x6c, 0x61, 0x63, 0x73, 0x69, 0x2f,
	0x6f, 0x72, 0x61, 0x63, 0x61, 0x6c, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x72, 0x61, 0x63, 0x61, 0x6c, 0x6c, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x4f, 0x52, 0x41, 0x32, 0x31, 0x30, 0x36, 0x32, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ora21062_proto_rawDescOnce sync.Once
	file_ora21062_proto_rawDescData = file_ora21062_proto_rawDesc
)

func file_ora21062_proto_rawDescGZIP() []byte {
	file_ora21062_proto_rawDescOnce.Do(func() {
		file_ora21062_proto_rawDescData = protoimpl.X.CompressGZIP(file_ora21062_proto_rawDescData)
	})
	return file_ora21062_proto_rawDescData
}

var file_ora21062_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ora21062_proto_goTypes = []any{
	(*Test_Ora21062_FontRt)(nil),     // 0: objects.Test_Ora21062_FontRt
	(*Test_Ora21062_RichTextRt)(nil), // 1: objects.Test_Ora21062_RichTextRt
	(*descriptorpb.MessageOptions)(nil),   // 2: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),     // 3: google.protobuf.FieldOptions
}
var file_ora21062_proto_depIdxs = []int32{
	0, // 0: objects.Test_Ora21062_RichTextRt.font:type_name -> objects.Test_Ora21062_FontRt
	2, // 1: objects.oracall_object_type:extendee -> google.protobuf.MessageOptions
	3, // 2: objects.oracall_field_type:extendee -> google.protobuf.FieldOptions
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	1, // [1:3] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ora21062_proto_init() }
func file_ora21062_proto_init() {
	if File_ora21062_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ora21062_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_ora21062_proto_goTypes,
		DependencyIndexes: file_ora21062_proto_depIdxs,
		MessageInfos:      file_ora21062_proto_msgTypes,
		ExtensionInfos:    file_ora21062_proto_extTypes,
	}.Build()
	File_ora21062_proto = out.File
	file_ora21062_proto_rawDesc = nil
	file_ora21062_proto_goTypes = nil
	file_ora21062_proto_depIdxs = nil
}
